--1. Lister les commandes de la table n°10, les trier par date chronologique (SELECT WHERE ORDER BY)
select * FROM commandes where idTable = 10 order by DateCommande;

--2. Liste les commandes de la table n°10 ou n°6 pour le service du midi (AND, OR IN)
select * FROM commandes where (idTable=6 OR idTable=10) and idService=1;
select * FROM commandes where idTable in (10,6) and idService=1;

--3. Afficher le nb de commandes passé à la table n°10 (COUNT et AS)
select count(*) as 'Nb Commandes' FROM commandes where idTable = 10;

--4. Afficher le nb de commande passé à la table n°10, pour chacun des services midi et soir (GROUP BY)
select idService, count(*) 
FROM commandes 
where idTable = 10 
group by idService;

--5. Reprendre la requête précédente et remplacer l'id du service par Midi ou Soir (CASE WHEN)
select CASE idService 
			WHEN 1 THEN 'Midi'
			ELSE 'Soir'
		END as Service, count(*) as NbCommandes
FROM commandes 
where idTable = 10 
group by idService;

--6. Afficher les commandes à venir, les trier par date anti-chronologique (NOW) 
select * FROM commandes 
where DateCommande<NOW() 
order by DateCommande desc;

--7. Afficher les commandes du dernier trimestre 2019 (YEAR, MONTH)
select * FROM commandes 
where YEAR(DateCommande)=2019 
and MONTH(DateCommande)>9;

--8. Reprendre la requête précédente et remplacer la date de commande par le mois et l'année : octobre 2019 (DATE_FORMAT)
SET lc_time_names = 'fr_FR';
SELECT idCommande, IdEmploye, idTable, idService,
        DATE_FORMAT(DateCommande, "%M %Y") as DateCommande
FROM commandes 
where YEAR(DateCommande)=2019 
and MONTH(DateCommande)>9;

--9. Afficher le nb de commandes total pour chaque mois de l'année 2019
SET lc_time_names = 'fr_FR';
SELECT DATE_FORMAT(DateCommande, "%M %Y") as mois, count(*) as nbCommandes
FROM commandes 
where YEAR(DateCommande)=2019 
group by mois
order by DateCommande

--10. Reprendre la requête précédente en n'affichant que les mois pour lesquels il y a au moins 5 commandes (HAVING)
SET lc_time_names = 'fr_FR';
SELECT DATE_FORMAT(DateCommande, "%M %Y") as mois, count(*) as nbCommandes
FROM commandes 
where YEAR(DateCommande)=2019
group by mois having nbCommandes>=5
order by DateCommande


 11  SQL/1_Restaurant select corrections/2. Sous-requetes corrections.sql 
@@ -0,0 +1,11 @@
--1. Lister les noms des employés qui n'ont pris aucune commande
SELECT Nom From employes where idEmploye NOT IN (SELECT idEmploye from commandes Order By idEmploye)

--2. Lister les noms des employés qui ont pris plus de 5 commandes en 2019
SELECT Nom From employes where idEmploye IN (SELECT idEmploye from commandes where YEAR(dateCommande)= 2019 group by idEmploye HAVING count(*) >5)

--3. Lister les noms des boissons qui n'ont jamais été commandées
Select Designation From boissons where idBoisson NOT IN (SELECT idBoisson from commande_boissons)	

--4. Afficher le nom des boisson qui ont été commandées au moins 10 fois
Select Designation From boissons where idBoisson IN (SELECT idBoisson from commande_boissons group by idBoisson HAVING count(*) >=10)
 94  SQL/1_Restaurant select corrections/3. Jointures corrections.sql 
@@ -0,0 +1,94 @@
--1. Afficher la liste des plats avec comme colonnes : "Plat", "Type" et "Prix" (utilisez des alias)
--  Le type affiché correspond à la désignation : entrée, plat ou dessert (INNER JOIN)
SELECT p.LibellePlat as Plat, t.Designation as 'Type', concat( FORMAT(p.PrixVente, 2), '€') as Prix 
FROM plats p 
inner join typeplats t on t.idType=p.idType

--2. Afficher chaque menu avec la liste de chaque plat avec son type, ordonné par prix 
SELECT m.Libelle as Menu, concat( FORMAT(m.PrixVente, 2), '€') as PrixMenu, t.Designation as 'Type', p.LibellePlat
FROM menus m
inner join menu_plats mp on mp.idMenu = m.idMenu
inner join plats p on p.idPlat = mp.idPlat
inner join typeplats t on t.idType=p.idType
order by m.PrixVente

--3. Afficher pour chaque mois de 2019, le nb de menus commandés et le CA que cela représente
SET lc_time_names = 'fr_FR';
SELECT DATE_FORMAT(c.DateCommande, "%M %Y") as Mois, 
       count(distinct c.idCommande) as 'nb Commandes',
	   count(cm.idmenu) as 'nb Menus',
	   concat( FORMAT( SUM(m.PrixVente), 2), '€') as 'CA des menus du mois'
FROM commandes c
inner join commande_menus cm on cm.idCommande=c.idCommande
inner join menus m on m.idMenu=cm.idmenu
where YEAR(c.DateCommande)=2019 
group by mois, MONTH(c.DateCommande)
order by MONTH(c.DateCommande)


--4. Afficher aussi les commandes pour lesquels aucun menu n’a été commandé (LEFT JOIN)
SET lc_time_names = 'fr_FR';
SELECT DATE_FORMAT(c.DateCommande, "%M %Y") as Mois, 
       count(distinct c.idCommande) as 'nb Commandes',
	   count(cm.idmenu) as 'nb Menus',
	   concat( FORMAT(SUM( IFNULL(m.PrixVente,0) ), 2), '€') as 'CA des menus du mois'
FROM commandes c
left join commande_menus cm on cm.idCommande=c.idCommande
left join menus m on m.idMenu=cm.idmenu
where YEAR(c.DateCommande)=2019 
group by mois, MONTH(c.DateCommande)
order by MONTH(c.DateCommande)

--5. Afficher la même chose pour les plats à la carte 
SET lc_time_names = 'fr_FR';
SELECT DATE_FORMAT(c.DateCommande, "%M %Y") as Mois, 
       count(distinct c.idCommande) as 'nb Commandes',
	   count(cp.idPlat) as 'nb Plats',
	   concat( FORMAT(SUM( IFNULL(p.PrixVente,0) ), 2), '€') as 'CA des plats du mois'
FROM commandes c
left join commande_plats cp on cp.idCommande=c.idCommande
left join plats p on p.idPlat=cp.idPlat
where YEAR(c.DateCommande)=2019 
group by mois, MONTH(c.DateCommande)
order by MONTH(c.DateCommande)

--6. Afficher pour chaque mois de 2019 le CA total hors boisson (menu + plat à la carte)
select Mois, SUM(nbCommandes) as nbCommandes, SUM(nbMenus) as nbMenus, SUM(nbPlats) as nbPlats, 
       concat( FORMAT(SUM( IFNULL(CA,0) ), 2), '€') as CA 
from (

	SELECT DATE_FORMAT(c.DateCommande, "%m/%Y") as Mois, 
		   count(distinct c.idCommande) as nbCommandes,
		   count(cm.idmenu) as nbMenus, 0 as nbPlats,
		   SUM( IFNULL(m.PrixVente,0)) as CA
	FROM commandes c
	left join commande_menus cm on cm.idCommande=c.idCommande
	left join menus m on m.idMenu=cm.idmenu
	where YEAR(c.DateCommande)=2019 
	group by mois

	UNION

	SELECT DATE_FORMAT(c.DateCommande, "%m/%Y") as Mois, 
		   count(distinct c.idCommande) as nbCommandes,
		   0 as nbMenus,count(cp.idPlat) as nbPlats,
		   SUM( IFNULL(p.PrixVente,0)) as CA
	FROM commandes c
	left join commande_plats cp on cp.idCommande=c.idCommande
	left join plats p on p.idPlat=cp.idPlat
	where YEAR(c.DateCommande)=2019 
	group by mois

	order by mois

) as CAtotal
group by Mois
